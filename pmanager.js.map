{"version":3,"file":"pmanager.js","sourceRoot":"","sources":["pmanager.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @fileOverview A manager that contains all player instances.\r\n * @author Arthur Pacaud (arthuro555)\r\n * @version 0.0.1-dev-in-progress\r\n */\r\n\r\n// Requirements\r\nimport { player, gdobject } from \"./player\"\r\nimport fs = require(\"fs\");\r\n\r\n/**\r\n* The class for managing all the player instances.\r\n* @class pmanager\r\n* @property {Array<player>} players The array containing instances of <tt>player</tt>.\r\n*/\r\nclass pmanager {\r\n    private players: player[];\r\n    /** @constructor */\r\n    constructor() {\r\n        /** @type {Array<player>} */\r\n        this.players = Array();\r\n    }\r\n\r\n    /**\r\n     * Get the Array with all the player instances.\r\n     * @returns {player[]}\r\n     */\r\n    getPlayers() {\r\n        return this.players;\r\n    }\r\n\r\n    /**\r\n     * Get a <tt>player</tt> Instance from the username or the user UUID.\r\n     * @method\r\n     * @param {string | null} [playerName] The player username\r\n     * @param {string | null} [playerUUID] The player UUID\r\n     * @returns {player | null}\r\n     */\r\n    getPlayer(playerName:string = null, playerUUID:string = null) {\r\n        var i;\r\n        for (i = 0; i < this.players.length; i += 1) {\r\n            if (!playerUUID === null) {\r\n                if (this.players[i].uuid === playerUUID) {\r\n                    return this.players[i];\r\n                }\r\n            }\r\n            if (!playerName === null) {\r\n                if (this.players[i].username === playerName) {\r\n                    return this.players[i];\r\n                }\r\n            }\r\n        }\r\n        return null; //not found\r\n    }\r\n    /**\r\n     * Add a <tt>player</tt> Instance to The manager.\r\n     * @method\r\n     * @param {player} [playerInstance] The <tt>player</tt> instance.\r\n     * @returns {boolean}\r\n     */\r\n    addPlayer(playerInstance:player) {\r\n        let players:player[] = this.getPlayers();\r\n        for(let p of players){\r\n            if(p.uuid === playerInstance.uuid){\r\n                console.error(\"Tried to add an already existing player to the player manager!\");\r\n                return false\r\n            }\r\n            if(p.username === playerInstance.username){\r\n                console.warn(\"An user with the same username as an existing one is being added! Is this Normal?\")\r\n            }\r\n        }\r\n        this.players[this.players.length] = playerInstance;\r\n        return true;\r\n    }\r\n    /**\r\n     * Set a <tt>player</tt> Instance to Online.\r\n     * @method\r\n     * @param {string | null} [playerName] The <tt>player</tt>'s instance's name.\r\n     * @param {string | null} [playerUUID] The <tt>player</tt>'s instance's UUID.\r\n     * @returns {boolean}\r\n     * @deprecated Use this.login() instead.\r\n     */\r\n    setOnline(playerName:string = null, playerUUID:string = null) {\r\n        var p = this.getPlayer(playerName, playerUUID);\r\n        if (p === null) {\r\n            return false;\r\n        }\r\n        p.online = true;\r\n        return true;\r\n    }\r\n    /**\r\n     * Set a <tt>player</tt> Instance to Offline.\r\n     * @method\r\n     * @param {string | null} [playerName] The <tt>player</tt>'s instance's name.\r\n     * @param {string | null} [playerUUID] The <tt>player</tt>'s instance's UUID.\r\n     * @returns {boolean}\r\n     * @deprecated Use this.logout() instead.\r\n     */\r\n    setOffline(playerName:string = null, playerUUID:string = null) {\r\n        let p:player = this.getPlayer(playerName, playerUUID);\r\n        if (p === null) {\r\n            return false;\r\n        }\r\n        p.logout_force();\r\n        return true;\r\n    }\r\n    /**\r\n     * Get all <tt>objects</tt> of all <tt>players</tt>. Returns null if there are no <tt>objects</tt> on the Scene.\r\n     * @method\r\n     * @returns {Array | null}\r\n     */\r\n    getAllObjects() {\r\n        let ol:gdobject[] = Array();\r\n        let p:player = undefined;\r\n        let o:gdobject = undefined;\r\n        for (p of this.players) {\r\n            for (o of p.data) {\r\n                ol.push(o)\r\n            }\r\n        }\r\n        if (ol.length === 0) {\r\n            return null;\r\n        } else {\r\n            return ol;\r\n        }\r\n    }\r\n    /**\r\n     * Get all <tt>object</tt> of a specific <tt>player</tt> instance.\r\n     * @method\r\n     * @param {string | null} [playerName] The <tt>player</tt>'s instance's name.\r\n     * @param {string | null} [playerUUID] The <tt>player</tt>'s instance's UUID.\r\n     * @returns {Array | null}\r\n     */\r\n    getObjectForPlayer(playerName = null, playerUUID = null) {\r\n        var pl = this.getPlayer(playerName, playerUUID);\r\n        var ol = Array();\r\n        for (var p of this.players) {\r\n            if (p === pl) {\r\n                continue;\r\n            }\r\n            for (var o in p.getObjects()) {\r\n                ol.push(o)\r\n            }\r\n        }\r\n        if (ol.length === 0) {\r\n            return null;\r\n        } else {\r\n            return ol;\r\n        }\r\n    }\r\n    /**\r\n     * Set a player online and get a token if the authentication successes.\r\n     * @method\r\n     * @param {string} [username] The <tt>player</tt>'s username.\r\n     * @param {string} [password] The <tt>player</tt>'s password.\r\n     * @returns {string | boolean}\r\n     */\r\n    login(username, password) {\r\n        var p = this.getPlayer(username);\r\n        if (p === null) {\r\n            let np = new player(username, password);\r\n            this.addPlayer(np);\r\n            return np.login(password);\r\n        }\r\n        return p.login(password);\r\n    }\r\n    logout(username, token){\r\n        var p = this.getPlayer(username);\r\n        if (p === null) {\r\n            return false;\r\n        }\r\n        return p.logout(token);\r\n    }\r\n    /**\r\n     * Serialize and save the player data in pmanager.\r\n     * @method\r\n     * @param {string} [file]\r\n     * @returns {boolean}\r\n     */\r\n    serialize(file = \"userdata.json\"){\r\n        let i:number = 0;\r\n        let players:string[] = [];\r\n        for(let p of this.players){\r\n            players[i] = <string>player.serialize(p);\r\n            i++;\r\n        }\r\n        console.log(players);\r\n        fs.writeFileSync(\"./\"+file, JSON.stringify(players));\r\n        return true;\r\n    }\r\n    /**\r\n     * Deserialize and load the player data in pmanager.\r\n     * @method\r\n     * @param {string} [file]\r\n     * @returns {boolean}\r\n     * @throws \"Invalid JSON. Verify for errors or delete userdata.json.\"\r\n     */\r\n    loadData(file = \"userdata.json\"){\r\n        if (fs.existsSync(file)) {\r\n            try {\r\n                let i = 0;\r\n                // @ts-ignore\r\n                let players = JSON.parse(fs.readFileSync(\"./\"+file));\r\n                let pl:player[] = Array(players.length);\r\n                for(let p of players){\r\n                    pl[i] = new player(\"none\", \"\");\r\n                    player.loadData(pl[i], p);\r\n                    i++;\r\n                }\r\n                // console.log(players);\r\n                for(let p of pl){\r\n                    this.addPlayer(p);\r\n                }\r\n                return true;\r\n            } catch (e) {\r\n                if(e instanceof SyntaxError){\r\n                    throw \"Invalid JSON. Verify for errors or delete \"+file+\".\"\r\n                } else {\r\n                    console.log(\"Unknown error while reading \"+file+\": \" + e);\r\n                }\r\n            }\r\n        } else{\r\n            console.log('No user data found: creating a clean new one.');\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexports.pmanager = pmanager;"]}