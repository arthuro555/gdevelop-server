{"version":3,"file":"confighandler.js","sourceRoot":"","sources":["confighandler.ts"],"names":[],"mappings":"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","sourcesContent":["const fs = require(\"fs\");\r\nconst uuidv4 = require(\"uuid/v4\");\r\n\r\n\r\n/**\r\n * A class to load/handle the config.json file.\r\n * @class\r\n * @protected {Array} [defaultConfig] - The default config.\r\n * @public {Array} [config] - The actual config\r\n */\r\nexport class config {\r\n    protected requiredConfig:string[] = [\r\n        \"SECRET\",\r\n        \"Verbose\",\r\n        \"debug\",\r\n        \"Security Rules\"\r\n    ];\r\n    protected customConfigVerifier = {\r\n        \"Security Rules\": this.securityRulesVerifier,\r\n        \"defaultUsers\": this.defaultUsersVerifier\r\n    };\r\n    protected defaultConfig: object = {\r\n        \"SECRET\": uuidv4(),\r\n        \"Verbose\": false,\r\n        \"defaultUsers\": {\r\n            \"admin\": {\r\n                \"username\": \"admin\",\r\n                \"password\": \"1234\",\r\n                \"Admin?\": true\r\n            },\r\n            \"user\": {\r\n                \"username\": \"user\",\r\n                \"password\": \"no u\",\r\n                \"Admin?\": false\r\n            }\r\n        },\r\n        \"Security Rules\" : {\r\n            \"allowDuplicateUsername\" : true,\r\n            \"allowDuplicateUUID\" : false,\r\n            \"warnOnDuplicateUsername\" : true,\r\n            \"warnOnDuplicateUUID\" : true\r\n        }\r\n    };\r\n    public conf:object = this.defaultConfig;\r\n\r\n    /** @constructor*/\r\n    constructor() {\r\n        if (fs.existsSync('config.json')) {\r\n            console.log('Loading Existing Config...');\r\n            try {\r\n                // noinspection JSCheckFunctionSignatures\r\n                this.conf = JSON.parse(fs.readFileSync(\"config.json\"));\r\n            } catch (e) {\r\n                if (e instanceof SyntaxError) {\r\n                    console.log(\"Invalid JSON. Re-Creating Default config.\");\r\n                    this.conf = this.defaultConfig;\r\n                    fs.writeFileSync('config.json', JSON.stringify(this.conf, null, 4));\r\n                } else {\r\n                    console.log(\"Unknown error while reading config.json: \" + e);\r\n                }\r\n            }\r\n        } else {\r\n            console.log('Creating New Default Config...');\r\n            this.conf = this.defaultConfig;\r\n            fs.writeFileSync('config.json', JSON.stringify(this.conf, null, 4));\r\n        }\r\n\r\n        this.defaultSettingVerifier(\"Verbose\");\r\n        this.checkSettings(this.conf[\"Verbose\"]);\r\n    }\r\n    defaultSettingVerifier(settingName:string, verbose:boolean = false){\r\n        if(verbose){console.log(\"Checking config: \"+settingName)}\r\n        if (typeof this.conf[settingName] === \"object\") {\r\n            console.error(\"ERROR: 'Can't check an object: create your own check.' in '\"+settingName+\"'.\")\r\n        }\r\n        if (this.conf[settingName] === undefined) {\r\n            console.warn(\"WARN: 'Invalid Config. Using default value.' in '\"+settingName+\"'.\");\r\n            this.conf[settingName] = this.defaultConfig[settingName];\r\n        }\r\n    }\r\n    checkSettings(verbose:boolean = false){\r\n        for (let s of this.requiredConfig){\r\n            this.checkSetting(s, verbose)\r\n        }\r\n    }\r\n    checkSetting(setting:string, verbose:boolean = false){\r\n        if(setting in this.customConfigVerifier){\r\n            this.customConfigVerifier[setting].call(this,verbose);\r\n        } else{\r\n            this.defaultSettingVerifier(setting, verbose);\r\n        }\r\n    }\r\n    securityRulesVerifier(verbose:boolean = false){\r\n        if (this.conf[\"Security Rules\"] === undefined) {\r\n            console.warn(\"WARN: 'Invalid Config. Using default value.' in 'Security Rules'.\");\r\n            this.conf[\"Security Rules\"] = this.defaultConfig[\"Security Rules\"];\r\n            return;\r\n        }\r\n        if (this.conf[\"Security Rules\"][\"allowDuplicateUsername\"] === undefined) {\r\n            console.warn(\"WARN: 'Invalid Config. Using default value.' in 'Security Rules/allowDuplicateUsername'.\");\r\n            this.conf[\"Security Rules\"][\"allowDuplicateUsername\"] = this.defaultConfig[\"allowDuplicateUsername\"];\r\n        }\r\n        if (this.conf[\"Security Rules\"][\"allowDuplicateUUID\"] === undefined) {\r\n            console.warn(\"WARN: 'Invalid Config. Using default value.' in 'Security Rules/allowDuplicateUUID'.\");\r\n            this.conf[\"Security Rules\"][\"allowDuplicateUUID\"] = this.defaultConfig[\"allowDuplicateUUID\"];\r\n        }\r\n        if (this.conf[\"Security Rules\"][\"warnOnDuplicateUsername\"] === undefined) {\r\n            console.warn(\"WARN: 'Invalid Config. Using default value.' in 'Security Rules/warnOnDuplicateUsername'.\");\r\n            this.conf[\"Security Rules\"][\"warnOnDuplicateUsername\"] = this.defaultConfig[\"warnOnDuplicateUsername\"];\r\n        }\r\n        if (this.conf[\"Security Rules\"][\"warnOnDuplicateUUID\"] === undefined) {\r\n            console.warn(\"WARN: 'Invalid Config. Using default value.' in 'Security Rules/warnOnDuplicateUUID'.\");\r\n            this.conf[\"Security Rules\"][\"warnOnDuplicateUUID\"] = this.defaultConfig[\"warnOnDuplicateUUID\"];\r\n        }\r\n    }\r\n    defaultUsersVerifier(verbose:boolean = false){\r\n        if (this.conf[\"defaultUsers\"] === undefined) {\r\n            console.warn(\"WARN: 'Invalid Config. Using default value.' in 'Security Rules'.\");\r\n            this.conf[\"defaultUsers\"] = this.defaultConfig[\"defaultUsers\"];\r\n            return;\r\n        }\r\n        for(let key in this.conf[\"defaultUsers\"].keys()){\r\n            if (this.conf[\"defaultUsers\"][key][\"username\"] === undefined) {\r\n                console.warn(\"WARN: 'Invalid Config. Can't load one of the users in defaultUsers.\");\r\n                delete conf[\"defaultUsers\"][key];\r\n            }\r\n            if (this.conf[\"defaultUsers\"][key][\"password\"] === undefined) {\r\n                console.warn(\"WARN: 'Invalid Config. Can't load one of the users in defaultUsers.\");\r\n                delete conf[\"defaultUsers\"][key];\r\n            }\r\n            if (this.conf[\"defaultUsers\"][key][\"Admin?\"] === undefined) {\r\n                console.warn(\"WARN: 'Invalid Config. Can't load one of the users in defaultUsers.\");\r\n                delete conf[\"defaultUsers\"][key];\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlet conf = new config();\r\n\r\nexports.configClass = config;\r\nexports.configInstance = conf;\r\nexports.config = conf.conf;\r\n"]}